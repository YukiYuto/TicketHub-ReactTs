import { useState } from "react";
import { useTheme } from "@/contexts/ThemeContext";
import "@/styles/tickets/TicketPage.css";

interface TicketType {
  id: string;
  name: string;
  price: number;
  description: string;
  features: string[];
  available: number;
}

interface SelectedTicket {
  ticketId: string;
  quantity: number;
}

const TicketPage = () => {
  const { theme } = useTheme();
  const [selectedTickets, setSelectedTickets] = useState<SelectedTicket[]>([]);

  // Mock event data
  const event = {
    id: "1",
    title: "VBA STAR X 2025 | Game 44 - V Islanders vs Cantho Catfish",
    date: "31 Th√°ng 07, 2025",
    time: "19:00 - 21:30",
    location: "Cung Thi·∫øu Nhi H√† N·ªôi C∆° s·ªü 2",
    address:
      "17 Ph·∫°m H√πng, Ph∆∞·ªùng M·ªπ ƒê√¨nh 2, Qu·∫≠n Nam T·ª´ Li√™m, Th√†nh Ph·ªë H√† N·ªôi",
    image: "/api/placeholder/800/400",
    description:
      "Tr·∫≠n ƒë·∫•u b√≥ng r·ªï h·∫•p d·∫´n gi·ªØa V Islanders v√† Cantho Catfish trong khu√¥n kh·ªï gi·∫£i ƒë·∫•u VBA STAR X 2025. ƒê√¢y l√† m·ªôt trong nh·ªØng tr·∫≠n ƒë·∫•u ƒë∆∞·ª£c mong ch·ªù nh·∫•t c·ªßa m√πa gi·∫£i v·ªõi s·ª± tham gia c·ªßa nh·ªØng c·∫ßu th·ªß t√†i nƒÉng.",
  };

  const ticketTypes: TicketType[] = [
    {
      id: "vip",
      name: "VIP Premium",
      price: 299000,
      description: "Ch·ªó ng·ªìi t·ªët nh·∫•t v·ªõi view ho√†n h·∫£o",
      features: [
        "Gh·∫ø ng·ªìi h·∫°ng nh·∫•t",
        "N∆∞·ªõc u·ªëng mi·ªÖn ph√≠",
        "Parking mi·ªÖn ph√≠",
        "Meet & Greet v·ªõi c·∫ßu th·ªß",
      ],
      available: 50,
    },
    {
      id: "standard",
      name: "Standard",
      price: 149000,
      description: "Ch·ªó ng·ªìi ti√™u chu·∫©n v·ªõi view t·ªët",
      features: ["Gh·∫ø ng·ªìi ti√™u chu·∫©n", "N∆∞·ªõc u·ªëng gi·∫£m gi√°", "Parking c√≥ ph√≠"],
      available: 200,
    },
    {
      id: "economy",
      name: "Economy",
      price: 79000,
      description: "Ch·ªó ng·ªìi ph·ªï th√¥ng",
      features: ["Gh·∫ø ng·ªìi ph·ªï th√¥ng", "Kh√¥ng bao g·ªìm ƒë·ªì u·ªëng"],
      available: 500,
    },
  ];

  const organizer = {
    name: "VBA Entertainment",
    description:
      "VBA Entertainment l√† ƒë∆°n v·ªã t·ªï ch·ª©c c√°c gi·∫£i ƒë·∫•u b√≥ng r·ªï chuy√™n nghi·ªáp h√†ng ƒë·∫ßu Vi·ªát Nam. V·ªõi nhi·ªÅu nƒÉm kinh nghi·ªám trong lƒ©nh v·ª±c th·ªÉ thao v√† gi·∫£i tr√≠, ch√∫ng t√¥i cam k·∫øt mang ƒë·∫øn nh·ªØng tr·∫£i nghi·ªám tuy·ªát v·ªùi nh·∫•t cho kh√°n gi·∫£.",
    established: "2018",
    events: "50+ Events",
    contact: "info@vbaentertainment.vn",
  };

  const handleQuantityChange = (ticketId: string, quantity: number) => {
    if (quantity === 0) {
      setSelectedTickets((prev) => prev.filter((t) => t.ticketId !== ticketId));
    } else {
      setSelectedTickets((prev) => {
        const existing = prev.find((t) => t.ticketId === ticketId);
        if (existing) {
          return prev.map((t) =>
            t.ticketId === ticketId ? { ...t, quantity } : t
          );
        } else {
          return [...prev, { ticketId, quantity }];
        }
      });
    }
  };

  const getSelectedQuantity = (ticketId: string) => {
    return selectedTickets.find((t) => t.ticketId === ticketId)?.quantity || 0;
  };

  const calculateTotal = () => {
    return selectedTickets.reduce((total, selected) => {
      const ticket = ticketTypes.find((t) => t.id === selected.ticketId);
      return total + (ticket?.price || 0) * selected.quantity;
    }, 0);
  };

  const getTotalTickets = () => {
    return selectedTickets.reduce(
      (total, selected) => total + selected.quantity,
      0
    );
  };

  return (
    <div className="ticket-page" data-theme={theme}>
      {/* Hero Section with Ticket Design */}
      <section className="ticket-hero">
        <div className="ticket-container">
          <div className="movie-ticket">
            {/* Ticket Main Body */}
            <div className="ticket-main-body">
              {/* Left Section - Event Info */}
              <div className="ticket-left-section">
                <div className="ticket-header-info">
                  <div className="event-category">BASKETBALL GAME</div>
                  <h1 className="ticket-event-title">{event.title}</h1>
                </div>

                <div className="ticket-details-grid">
                  <div className="detail-row">
                    <span className="detail-label">NG√ÄY</span>
                    <span className="detail-value">{event.date}</span>
                  </div>
                  <div className="detail-row">
                    <span className="detail-label">TH·ªúI GIAN</span>
                    <span className="detail-value">{event.time}</span>
                  </div>
                  <div className="detail-row">
                    <span className="detail-label">ƒê·ªäA ƒêI·ªÇM</span>
                    <span className="detail-value">{event.location}</span>
                  </div>
                </div>

                <div className="ticket-price-info">
                  <span className="price-from">Gi√° v√© t·ª´</span>
                  <span className="price-amount">79,000ƒë</span>
                </div>
              </div>

              {/* Perforated Divider */}
              <div className="ticket-perforation">
                <div className="perforation-line">
                  {Array.from({ length: 20 }).map((_, i) => (
                    <div key={i} className="perf-circle"></div>
                  ))}
                </div>
              </div>

              {/* Right Section - Stub with Image */}
              <div className="ticket-right-section">
                <div className="ticket-stub-content">
                  <div className="stub-logo">
                    <span>VBA</span>
                  </div>

                  <div className="stub-image">
                    <img src={event.image} alt="Event" loading="lazy" />
                    <div className="image-overlay">
                      <div className="season-badge">VBA STAR X 2025</div>
                    </div>
                  </div>

                  <div className="stub-id">
                    <span className="ticket-id">#{event.id}</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Event Introduction */}
      <section className="event-intro">
        <div className="container">
          <h2 className="section-title">Gi·ªõi thi·ªáu s·ª± ki·ªán</h2>
          <div className="intro-content">
            <div className="intro-text">
              <p>{event.description}</p>
              <div className="event-highlights">
                <div className="highlight-item">
                  <span className="highlight-icon">üèÄ</span>
                  <span>Gi·∫£i ƒë·∫•u b√≥ng r·ªï chuy√™n nghi·ªáp</span>
                </div>
                <div className="highlight-item">
                  <span className="highlight-icon">‚≠ê</span>
                  <span>C√°c c·∫ßu th·ªß h√†ng ƒë·∫ßu Vi·ªát Nam</span>
                </div>
                <div className="highlight-item">
                  <span className="highlight-icon">üéä</span>
                  <span>Kh√¥ng kh√≠ s√¥i ƒë·ªông, h·∫•p d·∫´n</span>
                </div>
              </div>
            </div>
            <div className="event-image">
              <img src="/api/placeholder/600/300" alt="Event" loading="lazy" />
            </div>
          </div>
        </div>
      </section>

      {/* Ticket Selection */}
      <section className="ticket-selection">
        <div className="container">
          <h2 className="section-title">Ch·ªçn v√©</h2>
          <div className="selection-layout">
            {/* Left Side - Ticket Types */}
            <div className="ticket-types">
              {ticketTypes.map((ticket) => (
                <div key={ticket.id} className="ticket-type-card">
                  <div className="ticket-type-header">
                    <h3 className="ticket-type-name">{ticket.name}</h3>
                    <div className="ticket-type-price">
                      {ticket.price.toLocaleString("vi-VN")}ƒë
                    </div>
                  </div>

                  <p className="ticket-type-description">
                    {ticket.description}
                  </p>

                  <ul className="ticket-features">
                    {ticket.features.map((feature, index) => (
                      <li key={index}>
                        <span className="feature-icon">‚úì</span>
                        {feature}
                      </li>
                    ))}
                  </ul>

                  <div className="ticket-quantity">
                    <span className="available-text">
                      C√≤n l·∫°i: {ticket.available} v√©
                    </span>
                    <div className="quantity-selector">
                      <button
                        className="quantity-btn"
                        onClick={() =>
                          handleQuantityChange(
                            ticket.id,
                            Math.max(0, getSelectedQuantity(ticket.id) - 1)
                          )
                        }
                      >
                        -
                      </button>
                      <span className="quantity-value">
                        {getSelectedQuantity(ticket.id)}
                      </span>
                      <button
                        className="quantity-btn"
                        onClick={() =>
                          handleQuantityChange(
                            ticket.id,
                            Math.min(
                              ticket.available,
                              getSelectedQuantity(ticket.id) + 1
                            )
                          )
                        }
                      >
                        +
                      </button>
                    </div>
                  </div>
                </div>
              ))}
            </div>

            {/* Right Side - Order Summary */}
            <div className="order-summary">
              <div className="summary-card">
                <h3 className="summary-title">ƒê∆°n h√†ng c·ªßa b·∫°n</h3>

                <div className="summary-content">
                  {selectedTickets.length === 0 ? (
                    <p className="empty-cart">Ch∆∞a c√≥ v√© n√†o ƒë∆∞·ª£c ch·ªçn</p>
                  ) : (
                    <>
                      <div className="selected-tickets">
                        {selectedTickets.map((selected) => {
                          const ticket = ticketTypes.find(
                            (t) => t.id === selected.ticketId
                          );
                          return (
                            <div
                              key={selected.ticketId}
                              className="selected-ticket"
                            >
                              <div className="selected-info">
                                <span className="selected-name">
                                  {ticket?.name}
                                </span>
                                <span className="selected-quantity">
                                  x{selected.quantity}
                                </span>
                              </div>
                              <span className="selected-price">
                                {(
                                  (ticket?.price || 0) * selected.quantity
                                ).toLocaleString("vi-VN")}
                                ƒë
                              </span>
                            </div>
                          );
                        })}
                      </div>

                      <div className="summary-divider"></div>

                      <div className="summary-row">
                        <span>T·ªïng s·ªë v√©:</span>
                        <span>{getTotalTickets()}</span>
                      </div>

                      <div className="summary-row total">
                        <span>T·ªïng c·ªông:</span>
                        <span className="total-price">
                          {calculateTotal().toLocaleString("vi-VN")}ƒë
                        </span>
                      </div>
                    </>
                  )}
                </div>

                <button
                  className="buy-button"
                  disabled={selectedTickets.length === 0}
                >
                  Mua v√© ngay
                </button>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Organizer Information */}
      <section className="organizer-info">
        <div className="container">
          <h2 className="section-title">V·ªÅ ban t·ªï ch·ª©c</h2>
          <div className="organizer-content">
            <div className="organizer-card">
              <div className="organizer-header">
                <div className="organizer-logo">
                  <span>
                    {organizer.name
                      .split(" ")
                      .map((w) => w[0])
                      .join("")}
                  </span>
                </div>
                <div className="organizer-details">
                  <h3 className="organizer-name">{organizer.name}</h3>
                  <div className="organizer-stats">
                    <span className="stat">
                      Th√†nh l·∫≠p: {organizer.established}
                    </span>
                    <span className="stat">ƒê√£ t·ªï ch·ª©c: {organizer.events}</span>
                  </div>
                </div>
              </div>

              <p className="organizer-description">{organizer.description}</p>

              <div className="organizer-contact">
                <span className="contact-label">Li√™n h·ªá:</span>
                <span className="contact-info">{organizer.contact}</span>
              </div>
            </div>
          </div>
        </div>
      </section>
    </div>
  );
};

export default TicketPage;
